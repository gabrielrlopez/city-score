[{"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\index.js":"1","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\App.js":"2","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\reportWebVitals.js":"3","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\CityCard.js":"4","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\PaginationRounded.js":"5","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\util.js":"6","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\LoadingSpinner.js":"7","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\ScoreCards.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2917,"mtime":1609629536274,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2276,"mtime":1609648604460,"results":"13","hashOfConfig":"10"},{"size":532,"mtime":1609614553692,"results":"14","hashOfConfig":"10"},{"size":1392,"mtime":1609627910474,"results":"15","hashOfConfig":"10"},{"size":248,"mtime":1609618418766,"results":"16","hashOfConfig":"10"},{"size":608,"mtime":1609626107496,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1b8njma",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\index.js",[],["37","38"],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\App.js",["39","40","41","42"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl, Select, MenuItem } from '@material-ui/core';\nimport CityCard from './Components/CityCard';\nimport PaginationRounded from './Components/PaginationRounded';\nimport LoadingSpinner from './Components/LoadingSpinner';\nimport ScoreCards from './Components/ScoreCards';\nimport { getCityImages, getCityScoreLink } from './util.js'\n\n\nfunction App() {\n\n  const [cities, setCities] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [images, setImages] = useState([]);\n  const [basicCityInfo, setBasicCityInfo] = useState([])\n  const [cityScoreLinks, setScoreLinks] = useState([]);\n\n  const indexOfLastCity = currentPage * postsPerPage;\n  const indexOfFirstCity = indexOfLastCity - postsPerPage;\n  const currentCities = cities.slice(indexOfFirstCity, indexOfLastCity);\n\n\n  const continents = [\n    { name: 'Africa', geonames: 'AF' },\n    { name: 'Antartica', geonames: 'AN' },\n    { name: 'Asia', geonames: 'AS' },\n    { name: 'Europe', geonames: 'EU' },\n    { name: 'North America', geonames: 'NA' },\n    { name: 'Oceania', geonames: 'OC' },\n    { name: 'South America', geonames: 'SA' },\n  ]\n\n  const onContinentChange = (e) => {\n    const geoName = e.target.value\n    fetch(`https://api.teleport.org/api/continents/geonames%3A${geoName}/urban_areas/`)\n      .then(response => response.json())\n      .then(data => {\n        const cities = data._links['ua:items'].map(city => city.name)\n        setCities(cities)\n      })\n    setCurrentPage(1)\n  }\n\n  // Set images for current cities\n  useEffect(() => {\n    const setCityImages = async () => {\n      const getImages = currentCities.map(city => getCityImages(city));\n      const images = await Promise.all(getImages);\n      setImages(images)\n    }\n    setCityImages()\n\n    const setCityScoreLinks = async () => {\n      const getLinks = currentCities.map(city => getCityScoreLink(city));\n      const links = await Promise.all(getLinks);\n      setScoreLinks(links)\n    }\n    setCityScoreLinks()\n  }, [currentCities.length, currentPage])\n\n\n\n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  console.log(cityScoreLinks);\n\n  return (\n    <div className=\"App\">\n      <h1>Quality of life</h1>\n\n      <FormControl>\n        <Select\n          onChange={onContinentChange}\n          variant=\"outlined\"\n        >\n          {continents.map(continent => <MenuItem value={continent.geonames}>{continent.name}</MenuItem>)}\n        </Select>\n      </FormControl>\n\n      <CityCard\n        cities={currentCities}\n        images={images}\n        links={cityScoreLinks}\n      />\n\n      <ScoreCards\n\n      />\n\n      <PaginationRounded\n        postsPerPage={postsPerPage}\n        totalPosts={cities.length}\n        paginate={paginate}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\reportWebVitals.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\CityCard.js",["43"],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\PaginationRounded.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\util.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\LoadingSpinner.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\ScoreCards.js",["44","45","46","47","48","49","50","51"],"import React from 'react'\r\nimport { Card, CardActionArea, CardContent, Typography, CardMedia } from '@material-ui/core'\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction ScoreCards({ link }) {\r\n    const [scoreData, setscoreData] = useState([])\r\n\r\n    const getScores = () => {\r\n        fetch(link)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const { categories } = data;\r\n                setscoreData(categories)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"score__card\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCards\r\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":17,"column":10,"nodeType":"58","messageId":"59","endLine":17,"endColumn":23},{"ruleId":"56","severity":1,"message":"61","line":17,"column":25,"nodeType":"58","messageId":"59","endLine":17,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":61,"column":6,"nodeType":"64","endLine":61,"endColumn":41,"suggestions":"65"},{"ruleId":"56","severity":1,"message":"66","line":4,"column":10,"nodeType":"58","messageId":"59","endLine":4,"endColumn":19},{"ruleId":"56","severity":1,"message":"67","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":14},{"ruleId":"56","severity":1,"message":"68","line":2,"column":16,"nodeType":"58","messageId":"59","endLine":2,"endColumn":30},{"ruleId":"56","severity":1,"message":"69","line":2,"column":32,"nodeType":"58","messageId":"59","endLine":2,"endColumn":43},{"ruleId":"56","severity":1,"message":"70","line":2,"column":45,"nodeType":"58","messageId":"59","endLine":2,"endColumn":55},{"ruleId":"56","severity":1,"message":"71","line":2,"column":57,"nodeType":"58","messageId":"59","endLine":2,"endColumn":66},{"ruleId":"56","severity":1,"message":"66","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":19},{"ruleId":"56","severity":1,"message":"72","line":6,"column":12,"nodeType":"58","messageId":"59","endLine":6,"endColumn":21},{"ruleId":"56","severity":1,"message":"73","line":8,"column":11,"nodeType":"58","messageId":"59","endLine":8,"endColumn":20},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'LoadingSpinner' is defined but never used.","Identifier","unusedVar","'basicCityInfo' is assigned a value but never used.","'setBasicCityInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentCities'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'useEffect' is defined but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'CardMedia' is defined but never used.","'scoreData' is assigned a value but never used.","'getScores' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [currentCities, currentCities.length, currentPage]",{"range":"79","text":"80"},[2089,2124],"[currentCities, currentCities.length, currentPage]"]