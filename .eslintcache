[{"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\index.js":"1","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\App.js":"2","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\reportWebVitals.js":"3","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\CityCard.js":"4","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\PaginationRounded.js":"5","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\util.js":"6","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\LoadingSpinner.js":"7"},{"size":478,"mtime":1609990016796,"results":"8","hashOfConfig":"9"},{"size":3548,"mtime":1609994925761,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5056,"mtime":1609970987881,"results":"12","hashOfConfig":"9"},{"size":538,"mtime":1609859649201,"results":"13","hashOfConfig":"9"},{"size":20659,"mtime":1609812704985,"results":"14","hashOfConfig":"9"},{"size":248,"mtime":1609618418766,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1b8njma",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\index.js",[],["32","33"],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\App.js",["34","35","36","37","38"],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\reportWebVitals.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\CityCard.js",["39","40"],"import React from 'react'\r\nimport { Card, CardActionArea, CardContent, Typography, CardMedia } from '@material-ui/core'\r\nimport ArrowBackSharpIcon from '@material-ui/icons/ArrowBackSharp';\r\nimport '../Styles/CityCards.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { svgPaths } from '../util.js'\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nfunction CityCard({ cities, images, links, postsPerPage, totalPosts, paginate, currentPage }) {\r\n    const [clicked, setClick] = useState(false)\r\n    const [scores, setscores] = useState([])\r\n    const [hiddenScores, setHiddenScores] = useState(false)\r\n    const [arrowVisibility, setArrowVisibility] = useState(false)\r\n\r\n    const click = (e) => {\r\n        setClick(true)\r\n        const city = e.target.title\r\n        const link = links.find(link => link.includes(city.toLowerCase().split(' ').join('-')))\r\n        fetch(link)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const { categories } = data\r\n                setscores(categories)\r\n            })\r\n        setHiddenScores(false)\r\n        setArrowVisibility(true)\r\n    }\r\n    console.log(scores);\r\n\r\n    //pagination\r\n    let pageNumbers = Math.ceil(totalPosts / postsPerPage);\r\n\r\n    const handleChange = (event, pageNumber) => {\r\n        paginate(pageNumber)\r\n    };\r\n\r\n    //hide score cards on back button click \r\n    const hide = () => {\r\n        setHiddenScores(true)\r\n        setClick(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/**City cards*/}\r\n            <div className={clicked ? \"city__cards--hidden\" : \"city__cards\"}>\r\n                {cities.map((city, i) =>\r\n                    <Card\r\n                        className=\"city__card\"\r\n                    >\r\n                        <CardActionArea>\r\n                            <CardMedia\r\n                                className=\"city__image\"\r\n                                image={images[i]}\r\n                                title={city}\r\n                                onClick={click}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                >\r\n                                    {city}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>)}\r\n            </div>\r\n\r\n            {/**Pagination */}\r\n            <div className={clicked ? \"pagination--hidden\" : \"pagination\"}>\r\n                <Pagination count={pageNumbers} variant=\"outlined\" shape=\"rounded\" onChange={handleChange} page={currentPage} hidePrevButton hideNextButton />\r\n            </div>\r\n\r\n            {/**Score cards */}\r\n            <div className={hiddenScores ? \"score__cards--hidden\" : \"score__cards\"}>\r\n                {/* <h1>City scores out of ten</h1> */}\r\n                {scores.map((score) =>\r\n                    < Card\r\n                        className={\"score__card\"}\r\n                    >\r\n                        <CardContent\r\n                            className=\"content\"\r\n                            style={{ backgroundColor: score.color }}\r\n                        >\r\n                            <Typography\r\n                                variant=\"h4\"\r\n                                color=\"textSecondary\"\r\n                            >\r\n                                {score.name}\r\n                            </Typography>\r\n                            <div className=\"icon\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\"><path d={svgPaths[score.name]} /></svg>\r\n                            </div>\r\n\r\n                            <div className=\"progress\">\r\n                                <div className=\"progress__done\"\r\n                                    style={{\r\n                                        width: Math.ceil(score.score_out_of_10) + '0%',\r\n                                        opacity: 1\r\n                                    }}\r\n                                >\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"number\">\r\n                                <h2>{Math.ceil(score.score_out_of_10)}<span>/</span>10</h2>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>)}\r\n                {/* <ArrowBackSharpIcon\r\n                    onClick={hide}\r\n                    className={arrowVisibility ? \"back__arrow\" : \"back__arrow--hidden\"}\r\n                    fontSize=\"large\"\r\n                /> */}\r\n\r\n                <div className={arrowVisibility ? \"back__arrow\" : \"back__arrow--hidden\"} onClick={hide}>\r\n                    <ion-icon name=\"arrow-back-circle-outline\"></ion-icon>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CityCard\r\n","C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\PaginationRounded.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\util.js",[],"C:\\Users\\dARCHANGELDESIGN\\Desktop\\Quality Of Life\\quality-of-life\\src\\Components\\LoadingSpinner.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":25},{"ruleId":"45","severity":1,"message":"49","line":6,"column":8,"nodeType":"47","messageId":"48","endLine":6,"endColumn":22},{"ruleId":"45","severity":1,"message":"50","line":16,"column":10,"nodeType":"47","messageId":"48","endLine":16,"endColumn":23},{"ruleId":"45","severity":1,"message":"51","line":16,"column":25,"nodeType":"47","messageId":"48","endLine":16,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":62,"column":6,"nodeType":"54","endLine":62,"endColumn":41,"suggestions":"55"},{"ruleId":"45","severity":1,"message":"56","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":26},{"ruleId":"45","severity":1,"message":"57","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":19},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'PaginationRounded' is defined but never used.","Identifier","unusedVar","'LoadingSpinner' is defined but never used.","'basicCityInfo' is assigned a value but never used.","'setBasicCityInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentCities'. Either include it or remove the dependency array.","ArrayExpression",["60"],"'ArrowBackSharpIcon' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [currentCities, currentCities.length, currentPage]",{"range":"63","text":"64"},[2117,2152],"[currentCities, currentCities.length, currentPage]"]